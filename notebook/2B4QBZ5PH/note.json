{
  "paragraphs": [
    {
      "text": "%flinkStreaming\n//*/5 * * * * ?\n\nval text \u003d env.fromElements(\"To be or not to be\")\nval counts \u003d text.flatMap { _.toLowerCase.split(\"\\\\W+\") filter { _.nonEmpty } }.map { (_, 1) }.keyBy(0).sum(1)\ncounts.print\n\n\nimport org.apache.flink.contrib.streaming.scala.DataStreamUtils._\n\nvar collected \u003d collect[(String,Int)](counts)",
      "dateUpdated": "Nov 17, 2015 6:46:40 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1447764366498_-223114068",
      "id": "20151117-044606_1881990935",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "text: org.apache.flink.streaming.api.scala.DataStream[String] \u003d org.apache.flink.streaming.api.scala.DataStream@6a607c72\ncounts: org.apache.flink.streaming.api.scala.DataStream[(String, Int)] \u003d org.apache.flink.streaming.api.scala.DataStream@68c05f0f\nres44: org.apache.flink.streaming.api.datastream.DataStreamSink[(String, Int)] \u003d org.apache.flink.streaming.api.datastream.DataStreamSink@3ffd1845\nimport org.apache.flink.contrib.streaming.scala.DataStreamUtils._\ncollected: java.util.Iterator[(String, Int)] \u003d org.apache.flink.contrib.streaming.java.DataStreamIterator@6d20f86e\n"
      },
      "dateCreated": "Nov 17, 2015 4:46:06 AM",
      "dateStarted": "Nov 17, 2015 6:46:18 AM",
      "dateFinished": "Nov 17, 2015 6:46:20 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "\n// register rabbit mq channel\n\n\n",
      "dateUpdated": "Nov 17, 2015 6:47:30 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1447764417297_-902904078",
      "id": "20151117-044657_223225283",
      "dateCreated": "Nov 17, 2015 4:46:57 AM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%flinkStreaming\nif(collected.hasNext()){\n    var el \u003d collected.next();\n    println(\"next element:\" + el) \n}\n\n// send feedback according to elements received here.\n",
      "dateUpdated": "Nov 17, 2015 6:47:30 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1447764436944_-1172030738",
      "id": "20151117-044716_464771867",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "next element:(or,1)\n"
      },
      "dateCreated": "Nov 17, 2015 4:47:16 AM",
      "dateStarted": "Nov 17, 2015 6:46:35 AM",
      "dateFinished": "Nov 17, 2015 6:46:35 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1447771441445_-193973393",
      "id": "20151117-064401_386310171",
      "dateCreated": "Nov 17, 2015 6:44:01 AM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "streamingExample",
  "id": "2B4QBZ5PH",
  "angularObjects": {
    "2B6RWMPBH": []
  },
  "config": {
    "looknfeel": "default",
    "cron": ""
  },
  "info": {}
}